@using Microsoft.AspNetCore.Components

@page "/courses/{courseId}/assignments"
@using Microsoft.AspNetCore.Components.Routing

@using PearReview.Areas.Courses.Models

@using PearReview.Areas.Courses.Services
@using PearReview.Areas.Identity.Data



@inject NavigationManager NavigationManager
@inject AssignmentsService AssignmentsService

<h1>Assignments</h1>
<p>
    Course ID: @courseId
</p>
@if (assignments == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul>
        @foreach (var assignment in assignments)
        {
            <li>@assignment.Title</li>
        }
    </ul>
}

@code {
    [Parameter]
    public string? courseId { get; set; }

    //private List<Assignment> assignments;
    private List<PearReview.Areas.Courses.Models.Assignment> assignments = new List<PearReview.Areas.Courses.Models.Assignment>();


    protected override async Task OnInitializedAsync()
    {
        var assignmentsFromService = await AssignmentsService.GetAssignmentsAsync(courseId);
        if (assignmentsFromService != null)
        {
            assignments = assignmentsFromService.Cast<PearReview.Areas.Courses.Models.Assignment>().ToList();
        }

      //  var assignmentsFromService = await AssignmentsService.GetAssignmentsAsync(courseId);
     //   assignments = assignmentsFromService?.Cast<PearReview.Areas.Courses.Models.Assignment>().ToList();

      // var assignmentsFromService = await AssignmentsService.GetAssignmentsAsync(courseId);
       //assignments = assignmentsFromService?.ToList();
       // assignments = await AssignmentsService.GetAssignmentsAsync(courseId);
       // assignments = assignmentsFromService?.Select(a => (PearReview.Areas.Courses.Models.Assignment)a).ToList();
    }
}
